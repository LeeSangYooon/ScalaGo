[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Amazon.com Inc. Java 17.0.6)
[debug]       Load.loadUnit: plugins took 50.4528ms
[debug]       Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\sangy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sangy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3563 ms
[debug]           Load.resolveProject(global-plugins) took 6.0903ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sangy\.sbt\1.0\plugins, plugins: List(<none>))) took 12.6722ms
[debug] [Loading] Done in C:\Users\sangy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 17.5169ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0704ms
[debug]     Load.loadUnit(file:/C:/Users/sangy/.sbt/1.0/plugins/, ...) took 70.0029ms
[debug]   Load.apply: load took 73.7299ms
[debug]   Load.apply: resolveProjects took 0.2263ms
[debug]   Load.apply: finalTransforms took 19.8223ms
[debug]   Load.apply: config.delegates took 0.832ms
[debug]   Load.apply: Def.make(settings)... took 197.6803ms
[debug]   Load.apply: structureIndex took 93.5697ms
[debug]   Load.apply: mkStreams took 0.009ms
[info] loading global plugins from C:\Users\sangy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1687.4911ms
[debug]           Load.loadUnit: plugins took 50.6098ms
[debug]           Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project
[debug]             Load.loadUnit: mkEval took 0.6005ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6291 ms
[info] loading settings for project alphazeroimplementation-build from idea.sbt ...
[debug]               Load.resolveProject(alphazeroimplementation-build) took 10.1036ms
[debug]             Load.loadTransitive: finalizeProject(Project(id alphazeroimplementation-build, base: C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, plugins: List(<none>))) took 15.0973ms
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, returning: (alphazeroimplementation-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 64.0677ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.3503ms
[debug]         Load.loadUnit(file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/project/, ...) took 132.5214ms
[debug]       Load.apply: load took 135.5908ms
[debug]       Load.apply: resolveProjects took 0.1541ms
[debug]       Load.apply: finalTransforms took 12.9415ms
[debug]       Load.apply: config.delegates took 0.4713ms
[debug]       Load.apply: Def.make(settings)... took 371.3233ms
[debug]       Load.apply: structureIndex took 47.0193ms
[debug]       Load.apply: mkStreams took 0.0052ms
[info] loading project definition from C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 892.0967ms
[debug]     Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\sangy\IdeaProjects\AlphaZeroImplementation
[debug]       Load.loadUnit: mkEval took 0.5021ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5308 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 55.8508ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sangy\IdeaProjects\AlphaZeroImplementation, plugins: List(<none>))) took 60.343ms
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 156.1213ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.2515ms
[debug]   Load.loadUnit(file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/, ...) took 1067.9679ms
[debug] Load.apply: load took 1070.9383ms
[debug] Load.apply: resolveProjects took 0.1621ms
[debug] Load.apply: finalTransforms took 32.3436ms
[debug] Load.apply: config.delegates took 0.6608ms
[debug] Load.apply: Def.make(settings)... took 120.9233ms
[debug] Load.apply: structureIndex took 58.2559ms
[debug] Load.apply: mkStreams took 0.006ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to AlphaZeroImplementation (in build file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
