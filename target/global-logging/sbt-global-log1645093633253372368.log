[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sangy\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sangy\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Amazon.com Inc. Java 17.0.6)
[debug]       Load.loadUnit: plugins took 579.0844ms
[debug]       Load.loadUnit: defsScala took 0.5901ms
[debug] [Loading] Scanning directory C:\Users\sangy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sangy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.16 ms
[debug]           Load.resolveProject(global-plugins) took 162.7236ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sangy\.sbt\1.0\plugins, plugins: List(<none>))) took 259.2564ms
[debug] [Loading] Done in C:\Users\sangy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 437.8829ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4332ms
[debug]     Load.loadUnit(file:/C:/Users/sangy/.sbt/1.0/plugins/, ...) took 1054.4293ms
[debug]   Load.apply: load took 2093.9194ms
[debug]   Load.apply: resolveProjects took 11.2115ms
[debug]   Load.apply: finalTransforms took 156.1987ms
[debug]   Load.apply: config.delegates took 17.5867ms
[debug]   Load.apply: Def.make(settings)... took 1615.5053ms
[debug]   Load.apply: structureIndex took 454.0204ms
[debug]   Load.apply: mkStreams took 8.0551ms
[info] loading global plugins from C:\Users\sangy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11566.3414ms
[debug]           Load.loadUnit: plugins took 210.8426ms
[debug]           Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project
[debug]             Load.loadUnit: mkEval took 28.3924ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.0314 ms
[info] loading settings for project alphazeroimplementation-build from idea.sbt ...
[debug]               Load.resolveProject(alphazeroimplementation-build) took 32.2736ms
[debug]             Load.loadTransitive: finalizeProject(Project(id alphazeroimplementation-build, base: C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, plugins: List(<none>))) took 40.3331ms
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project, returning: (alphazeroimplementation-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1382.5255ms
[debug]           Load.loadUnit: cleanEvalClasses took 32.3486ms
[debug]         Load.loadUnit(file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/project/, ...) took 1632.3419ms
[debug]       Load.apply: load took 1663.4576ms
[debug]       Load.apply: resolveProjects took 0.2917ms
[debug]       Load.apply: finalTransforms took 56.121ms
[debug]       Load.apply: config.delegates took 2.5213ms
[debug]       Load.apply: Def.make(settings)... took 587.8869ms
[debug]       Load.apply: structureIndex took 154.7638ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from C:\Users\sangy\IdeaProjects\AlphaZeroImplementation\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9669.47ms
[debug]     Load.loadUnit: defsScala took 0.0091ms
[debug] [Loading] Scanning directory C:\Users\sangy\IdeaProjects\AlphaZeroImplementation
[debug]       Load.loadUnit: mkEval took 2.5662ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.6082 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 226.3113ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sangy\IdeaProjects\AlphaZeroImplementation, plugins: List(<none>))) took 240.5362ms
[debug] [Loading] Done in C:\Users\sangy\IdeaProjects\AlphaZeroImplementation, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 14790.787ms
[debug]     Load.loadUnit: cleanEvalClasses took 84.6771ms
[debug]   Load.loadUnit(file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/, ...) took 24549.9364ms
[debug] Load.apply: load took 24567.6155ms
[debug] Load.apply: resolveProjects took 2.2939ms
[debug] Load.apply: finalTransforms took 130.4571ms
[debug] Load.apply: config.delegates took 4.3832ms
[debug] Load.apply: Def.make(settings)... took 464.1912ms
[debug] Load.apply: structureIndex took 91.7025ms
[debug] Load.apply: mkStreams took 0.1556ms
[info] set current project to AlphaZeroImplementation (in build file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56123 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56123, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AlphaZeroImplementation (in build file:/C:/Users/sangy/IdeaProjects/AlphaZeroImplementation/)
[debug] > Exec(idea-shell, None, None)
